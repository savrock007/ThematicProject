<?php

namespace App\Http\Controllers;


use App\Http\Requests\TicketCreateRequest;
use App\Http\Resources\TicketResource;
use App\Http\Resources\UserResource;
use App\Models\Ticket;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Http\Request;
use Inertia\Inertia;
use Inertia\Response;


class VulnerabilityController extends Controller
{

    public function list(Request $request): Response
    {


        $s = $request->input('text');
        $date = Carbon::create($request->input('date'))?->format('Y-m-d');
        $status = $request->input('status');


        $vulns = Ticket::where('developer_id', auth()->user()->id)->orWhere('tester_id', auth()->user()->id)
            ->when(auth()->user()->role == 'admin', function ($query) {
                $query->orWhere('id', '>', '0');
            })
            ->when($s, function ($query) use ($s) {
                $query->where('title', 'LIKE', "%{$s}%");
            })->when($date, function ($query) use ($date) {

                $query->where('created_at', '>', $date);
            })->when($status, function ($query) use ($status) {
                $query->where('status_id', $status);
            })->get();


        return Inertia::render('VulnList', [
            'vulns' => TicketResource::collection($vulns)
        ]);
    }


    public function details(Request $request, int $id): Response
    {

        $ticket = Ticket::find($id);
        return Inertia::render('VulnDetails', [
            'vuln' => new TicketResource($ticket)
        ]);


    }


    public function createPage(Request $request): Response
    {

        if (auth()->user()->role == 'admin') {

            $users = User::where('role', 'developer')->get();
            return Inertia::render('CreateTicket', [
                'users' => UserResource::collection($users)
            ]);
        } else {
            return "403 Forbidden";
        }
    }

    public function createTicket(TicketCreateRequest $request)
    {

        $data = $request->validated();

        $ticket = Ticket::create([
            'title' => $data['title'],
            'description' => $data['description'],
            'assets' => $data['assets'],
            'steps' => $data['steps'],
            'tester_id' => $data['tester'],
            'developer_id' => $data['developer'],
            'status_id' => 1,
        ]);

        return $ticket;

    }

    public function changeStatus(Request $request, $id, $status_id)
    {
        $ticket = Ticket::find($id);
        $ticket->update(['status_id' => $status_id]);
        $ticket->refresh();

        return redirect('/vulns/'.$id);

    }

    public function postComment(Request $request, $id){
        $ticket = Ticket::find($id);
        $ticket->comments()->create([
            'content'=>$request->input('comment'),
            'author_id'=>auth()->user()->id,
        ]);

        $ticket->refresh();

        return redirect('/vulns/'.$id);


    }


}
